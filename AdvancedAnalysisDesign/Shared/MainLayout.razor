@inherits LayoutComponentBase

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<MudThemeProvider Theme="currentTheme" />
<MudDialogProvider DisableBackdropClick="true"
                   CloseButton="true" />
<MudSnackbarProvider />

<MudLayout>
    @* ----- TopBar Begin   ----- *@

    <MudAppBar Color="Color.Primary" Fixed="true">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />  @*Drawer Button*@
        <MudText Typo="Typo.h5">Binary Beast - Bloodwork</MudText>     @*Application Title*@
        <MudAppBarSpacer/>
        <AuthorizeView>
            <Authorized>
                <MudText Class="pr-4" Typo="Typo.body1"> Username: @userName</MudText>
            </Authorized>
        </AuthorizeView>
    </MudAppBar>

    @* ----- TopBar End   ----- *@

    @* ----- Drawer Start   ----- *@

    @* ----- Drawer allows the side bar to be toggle   ----- *@
    <MudDrawer @bind-Open="@open" ClipMode="DrawerClipMode.Docked" Elevation="1">
        <SideBarNav />
    </MudDrawer>

    @* ----- Drawer End   ----- *@

    @* ----- MainContent Start   ----- *@

    <MudMainContent>
        @* -----  Div pushes the content away from the sides. Looks much better   ----- *@
        <div class="ml-2 mt-2">
            @Body
        </div>
    </MudMainContent>

    @* ----- MainContent End   ----- *@
</MudLayout>

@code {
    private string userName { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            userName = user.Identity.Name;
        }
    }
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var darkModeEnabled = await localStorage.GetItemAsync<bool>("DarkModeEnabled");
        
        currentTheme = darkModeEnabled ? darkTheme : defaultTheme;
        StateHasChanged();
    }
    
    bool open = false;

    void ToggleDrawer()
    {
        open = !open;
    }
    
    MudTheme currentTheme = new();
    MudTheme defaultTheme = new()
    {
        Palette = new Palette()
        {
            Black = "#272c34"
        }
    };

    MudTheme darkTheme = new()
    {
        Palette = new Palette()
        {
            Black = "#27272f",
            Background = "#32333d",
            BackgroundGrey = "#27272f",
            Surface = "#373740",
            DrawerBackground = "#27272f",
            DrawerText = "rgba(255,255,255, 0.50)",
            DrawerIcon = "rgba(255,255,255, 0.50)",
            AppbarBackground = "#27272f",
            AppbarText = "rgba(255,255,255, 0.70)",
            TextPrimary = "rgba(255,255,255, 0.70)",
            TextSecondary = "rgba(255,255,255, 0.50)",
            ActionDefault = "#adadb1",
            ActionDisabled = "rgba(255,255,255, 0.26)",
            ActionDisabledBackground = "rgba(255,255,255, 0.12)"
        }
    };
}