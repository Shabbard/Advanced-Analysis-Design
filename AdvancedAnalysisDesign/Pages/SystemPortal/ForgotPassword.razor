@page "/ForgotPassword"
@using AdvancedAnalysisDesign.Services
@using InputType = MudBlazor.InputType
@layout EmptyLayout
@inject ISnackbar Snackbar
@inject UserService UserService
@inject NavigationManager NavManager

<MudMainContent>
    <MudContainer MaxWidth="MaxWidth.Small" Class="mt-16">
        <MudGrid Justify="Justify.Center" Class="mt-16">
            <MudItem>
                <MudCard Elevation="5" Class="ForgotPasswordCard">
                    <MudCardContent>
                        <MudGrid Justify="Justify.Center">
                            <MudItem>
                                <MudText Align="Align.Center" Typo="Typo.h3">Forgot Password</MudText> @*Title for page*@
                            </MudItem>
                            <MudItem>
                                <MudText Style="text-align: center;" Typo="Typo.body2">Recover your Binary Beast account. Type in your Email and click Submit.</MudText>
                                <MudTextField Label="Email" @bind-Value="emailAddress" InputType="InputType.Email"/> @*Text field for user to type in their email.*@
                            </MudItem>
                        </MudGrid>
                    </MudCardContent>
                    <MudCardActions>
                        <MudGrid Justify="Justify.Center" Style="flex-direction: column; align-items: center; justify-content: center">
                            <MudItem xs="12">
                                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Style="min-width:23rem" OnClick="@SendTokenRequest">Submit</MudButton>
                            </MudItem>
                            <MudItem xs="12" Class="mt-n3">
                                <MudLink Href="/Login" Typo="Typo.body2">Back to Login</MudLink> @*Link to Login page*@
                            </MudItem>
                        </MudGrid>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        </MudGrid>
    </MudContainer>
</MudMainContent>

@code {
    string emailAddress;
    
    public async Task SendTokenRequest()
    {
        try
        {
            await UserService.SubmitForgetPasswordAsync(emailAddress);
            Snackbar.Add("Email sent for password reset.", Severity.Success, config => { config.ShowCloseIcon = false; });
            NavManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            Snackbar.Add(e.Message, Severity.Error, config => { config.ShowCloseIcon = false; });
        }
    }
}