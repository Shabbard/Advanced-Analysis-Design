@page "/PrescriptionCollection"
@using AdvancedAnalysisDesign.Services
@using AdvancedAnalysisDesign.Enums
@using AdvancedAnalysisDesign.Models.Database
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject PatientService PatientService
@inject NonPatientService NonPatientService


<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-8">

    <MudGrid Justify="Justify.Center">

        <MudItem xs="12">

            <MudText Typo="Typo.h4">
                Prescriptions for Collection
            </MudText>

        </MudItem>

        <MudItem xs="12">
            <MudDivider />
        </MudItem>

        @foreach (var prescription in patientWithPickups)
        {
            @foreach (var medication in prescription.Medications)
            {
                if (medication.Pickup.DateScheduled == DateTime.Today && medication.Pickup.IsPrepared == true)
                {


                    <MudItem xs="12">
                        <MudExpansionPanel>

                            <TitleContent>
                                <div class="d-flex">
                                    <MudGrid Class="pa-2">

                                        <MudItem xs="3">
                                            <MudPaper Elevation="1" Class="pa-4 pt-2">
                                                <MudText><strong>First Name: </strong>   @prescription.User.UserDetail.FirstName </MudText>
                                            </MudPaper>
                                        </MudItem>

                                        <MudItem xs="3">
                                            <MudPaper Elevation="1" Class="pa-4 pt-2">
                                                <MudText><strong>Last Name: </strong>   @prescription.User.UserDetail.LastName</MudText>
                                            </MudPaper>
                                        </MudItem>

                                        <MudItem xs="3">

                                        </MudItem>

                                    </MudGrid>
                                </div>
                            </TitleContent>

                            <ChildContent>

                                <MudGrid Class="pa-2">
                                    <MudItem xs="12">
                                        <MudPaper Elevation="2" Class="pa-2">
                                            <MudGrid Class="pa-2">

                                                <MudItem xs="12">
                                                    <MudText>
                                                        <strong>Prescribed Medications:</strong>
                                                    </MudText>
                                                </MudItem>

                                            </MudGrid>
                                        </MudPaper>
                                    </MudItem>

                                    <MudItem xs="7">
                                        <MudPaper Elevation="1" Class="pa-4 pt-2">
                                            <MudText>
                                                Medications: @medication.Medication.MedicationName
                                            </MudText>
                                        </MudPaper>
                                    </MudItem>

                                    <MudItem xs="3">
                                        <MudPaper Elevation="1" Class="pa-4 pt-2">
                                            <MudText><strong>Time of Collection:</strong> @medication.Pickup.DateScheduled</MudText>
                                        </MudPaper>
                                    </MudItem>

                                    <MudItem xs="2">
                                        <MudPaper Elevation="1" Class="pa-4 pt-2">
                                            <MudText>
                                                Amount: 1
                                            </MudText>
                                        </MudPaper>
                                    </MudItem>
                                </MudGrid>

                                <MudItem xs="12">
                                    <MudGrid Class="pa-2">
                                        <MudItem xs="12">
                                            <MudButton Variant="Variant.Filled" Style=" width: 200px; height: 60px;" Color="Color.Success" OnClick="@(() => PrescriptionCollected(medication.Pickup))">
                                                Collected
                                            </MudButton>
                                        </MudItem>
                                    </MudGrid>
                                </MudItem>

                            </ChildContent>
                        </MudExpansionPanel>
                    </MudItem>
                }
                else
                {
                    <MudItem xs="12">

                        <MudText Typo="Typo.h4">
                            There are no prescriptions currently needing or ready for collection
                        </MudText>

                    </MudItem>

                    return;
                }
            }
        }
    </MudGrid>
</MudContainer>

@code {

    List<Patient> patientWithPickups = new();
    int prescriptionsDue, prescriptionsPrepared, prescriptionsCollected;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.IsInRole(Role.Admin.ToString()))
        {
            patientWithPickups = await PatientService.FetchAllPatientsWithPickups();
        }
        else if (user.IsInRole(Role.Pharmacist.ToString()))
        {
            var currentMedicalSite = await NonPatientService.GetMedicalInstitutionForUser();
            patientWithPickups = await PatientService.GetAllMedicationsforInstitution(currentMedicalSite);
        }
        else
        {
            NavigationManager.NavigateTo("/", true);
        }
    }

    public async Task PrescriptionCollected(Pickup PickUpID)
    {
        await PatientService.PrescriptionCollected(PickUpID);
    }
}